package cli // import "github.com/skeptycal/cli"

Package cli contains utility functions for dealing with cli commands within
CLI applications written in Go.

The main component is the CLI interface that implements cli features through
the Terminal struct. Reference: github.com/skeptycal/cli/terminal

The ansi color terminal support is provided by the ansi package. Reference:
github.com/skeptycal/ansi

const Reset string = ansi.Reset ...
const NUL byte = iota ...
const BLACK = iota ...
const PCT = 0x8000 << shift
var ResetBytes []byte = ansi.ResetBytes ...
var DefaultLogLevel logrus.Level = logrus.DebugLevel
var GetWinSize = terminal.GetWinsize
var Output *bufio.Writer = bufio.NewWriter(os.Stdout)
var Screen *bytes.Buffer = new(bytes.Buffer)
func Background(str string, color int) string
func BasicEncode(b interface{}) string
func Bold(str string) string
func CheckIfTerminal(w io.Writer) bool
func Clear()
func Color(str string, color int) string
func Columns() int
func Context(data string, idx, max int) string
func CurrentHeight() int
func Flush()
func GetXY(x int, y int) (int, int)
func Height() int
func Highlight(str, substr string, color int) string
func HighlightRegion(str string, from, to, color int) string
func MoveCursor(x int, y int)
func MoveCursorBackward(bias int)
func MoveCursorDown(bias int)
func MoveCursorForward(bias int)
func MoveCursorUp(bias int)
func MoveTo(str string, x int, y int) (out string)
func Print(a ...interface{}) (n int, err error)
func Printf(format string, a ...interface{}) (n int, err error)
func Println(a ...interface{}) (n int, err error)
func ResetLine(str string) (out string)
func Rows() int
func Width() int
func Wrap(s string, width int) string
type Ansi = ansi.Ansi
type AnsiColor struct{ ... }
    func NewColor(in byte) *AnsiColor
type Any = interface{}
type CLI interface{ ... }
    func New() CLI
    func NewFromWriter(w io.Writer) CLI
    func NewStderr() CLI
type CLIControls interface{ ... }
type CursorControls interface{ ... }
type Logger = logrus.Logger
    var Log *Logger = NewLogger()
    func NewLogger() *Logger
type Printer interface{ ... }
type Terminal struct{ ... }
